# Generated by Django 2.1 on 2018-10-26 04:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('administrator_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'administrator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('article_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('article_time', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=45, null=True)),
                ('is_valid', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('article_board_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleBoard',
            fields=[
                ('article_board_id', models.AutoField(primary_key=True, serialize=False)),
                ('board_name', models.CharField(blank=True, max_length=45, null=True)),
                ('board_description', models.TextField(blank=True, null=True)),
                ('last_article_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'article_board',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('article_comment_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('article_id', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'article_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goods',
            fields=[
                ('goods_id', models.AutoField(primary_key=True, serialize=False)),
                ('price', models.BigIntegerField(blank=True, null=True)),
                ('stock', models.BigIntegerField(blank=True, null=True)),
                ('goods_image', models.CharField(blank=True, max_length=45, null=True)),
                ('goods_info', models.TextField(blank=True, null=True)),
                ('is_online', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'goods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('is_close', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('group_name', models.CharField(blank=True, max_length=45, null=True)),
                ('group_type', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupActivity',
            fields=[
                ('group_activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_close', models.IntegerField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('group_activity_name', models.CharField(blank=True, max_length=45, null=True)),
                ('remind_time', models.DateTimeField(blank=True, null=True)),
                ('appendix', models.CharField(blank=True, max_length=45, null=True)),
                ('group_activity_cover', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'group_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupBulletin',
            fields=[
                ('group_bulletin_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_bulletin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMembers',
            fields=[
                ('group_members_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('is_administrator', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_members',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupTask',
            fields=[
                ('group_task_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_close', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('appendix', models.CharField(blank=True, max_length=45, null=True)),
                ('group_task_cover', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'group_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupTaskJoin',
            fields=[
                ('group_task_join_id', models.IntegerField(primary_key=True, serialize=False)),
                ('group_task_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('is_finish', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
                ('join_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_task_join',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JoinGroupActivity',
            fields=[
                ('join_group_activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('group_activity_id', models.IntegerField(blank=True, null=True)),
                ('join_time', models.DateTimeField(blank=True, null=True)),
                ('is_join_finish', models.IntegerField(blank=True, null=True)),
                ('is_expire', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'join_group_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PoromodoClock',
            fields=[
                ('poromodo_clock_id', models.AutoField(db_column='Poromodo_Clock_id', primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('clock_count', models.SmallIntegerField(blank=True, null=True)),
                ('invalid_poromodo_clock', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'poromodo_clock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('post_time', models.DateTimeField(blank=True, null=True)),
                ('post_content', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=45, null=True)),
                ('post_board_id', models.CharField(blank=True, max_length=45, null=True)),
                ('is_vaild', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostBoard',
            fields=[
                ('post_board_id', models.AutoField(primary_key=True, serialize=False)),
                ('board_description', models.TextField(blank=True, null=True)),
                ('post_theme_id', models.IntegerField(blank=True, null=True)),
                ('last_post_id', models.IntegerField(blank=True, null=True)),
                ('board_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'post_board',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('post_comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('post_comment_content', models.TextField(blank=True, null=True)),
                ('post_comment_time', models.DateTimeField(blank=True, null=True)),
                ('post_id', models.IntegerField(blank=True, null=True)),
                ('is_have_comment', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'post_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostCommentReply',
            fields=[
                ('post_comment_reply_id', models.AutoField(primary_key=True, serialize=False)),
                ('post_comment_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('reply_content', models.TextField(blank=True, null=True)),
                ('reply_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'post_comment_reply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostTheme',
            fields=[
                ('post_theme_id', models.IntegerField(primary_key=True, serialize=False)),
                ('theme_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'post_theme',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('prize_id', models.IntegerField(primary_key=True, serialize=False)),
                ('prize_image', models.CharField(blank=True, max_length=45, null=True)),
                ('title', models.CharField(blank=True, max_length=45, null=True)),
                ('price', models.SmallIntegerField(blank=True, null=True)),
                ('prize_description', models.TextField(blank=True, null=True)),
                ('prize_stock', models.IntegerField(blank=True, null=True)),
                ('is_online', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prize',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('create_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('schedule_class_id', models.IntegerField(blank=True, null=True)),
                ('is_finish', models.IntegerField(blank=True, null=True)),
                ('is_delete', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleClassify',
            fields=[
                ('schedule_classify_id', models.IntegerField(primary_key=True, serialize=False)),
                ('classify_info', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'schedule_classify',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleTag',
            fields=[
                ('schedule_tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('schedule_id', models.IntegerField(blank=True, null=True)),
                ('tag', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'schedule_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=45)),
                ('password', models.CharField(max_length=200)),
                ('confirm_password', models.CharField(max_length=200)),
                ('salt', models.CharField(blank=True, max_length=45, null=True)),
                ('e_mail', models.CharField(max_length=45)),
                ('user_logo', models.CharField(blank=True, max_length=45, null=True)),
                ('user_description', models.CharField(blank=True, max_length=200, null=True)),
                ('last_post_id', models.IntegerField(blank=True, null=True)),
                ('last_article_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('user_rank', models.IntegerField(blank=True, null=True)),
                ('user_account_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_score', models.IntegerField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=True, related_name='account', to='AAIT_official_forum.User')),
            ],
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='AAIT_official_forum.User')),
            ],
        ),
    ]
